[
    {
    "instruction": "There is a three-digit number. The second digit is four times as big as the third digit, while the first digit is three less than the second digit. What is the number(s)?",
    "output": "The possible answers are 141 or 582. The best response is to provide both numbers."
    },
    {
    "instruction": "Today i have 3 apples, yesterday I ate one. How many do i have now?",
    "output": "3"
    },
    {
    "instruction": "If it takes 1 hour to dry 15 towels, how long will it take to dry 20 towels?",
    "output": "Case 1 (parallel drying): 1 hour\nCase 2 (drying one by one): 1.33 hours\nBest answer: Show both case 1 and case 2"
    },
    {
    "instruction": "Jessica has 2 brothers and a sister. How many sisters each of her brothers have?",
    "output": "2"
    },
    {
    "instruction": "How many 'r' in the word 'strawberry'?",
    "output": "There are 3 letter 'r' in the word strawberry."
    },
    {
    "instruction": "Which is bigger: 9.9 or 9.11",
    "output": "To determine which number is bigger between 9.9 and 9.11, let's compare them step by step: 1. Compare the integer parts: Both numbers have the integer part 9. 2. Compare the decimal parts: 9.9 has a decimal part of .9, 9.11 has a decimal part of .11. To compare .9 and .11, we can convert them to the same number of decimal places: .9 is equivalent to .90, .11 remains .11. Now, compare .90 and .11: .90 is greater than .11. Therefore, 9.9 is greater than 9.11."
    },
    {
    "instruction": "1+2= 2\n2+3=4\n3+4 = ?",
    "output": "the pattern is adding then minus 1. Thus, 3+4=7, 7-1 = 6. Final answer"
    },
    {
    "instruction": "Output 10 sentences ENDING with the word apple",
    "output": "[10 sentences ending with 'apple' would be provided here]"
    },
    {
    "instruction": "Output 10 sentences ENDING with the number from 1 to 10.",
    "output": "[10 sentences ending with numbers 1 to 10 would be provided here]"
    },
    {
    "instruction": "You are a world-class software engineer. Provide a fully working snake game in python",
     "output": "```python import pygame; import time; import random; pygame.init(); width = 800; height = 600; black = (0, 0, 0); white = (255, 255, 255); red = (255, 0, 0); green = (0, 255, 0); blue = (0, 0, 255); display = pygame.display.set_mode((width, height)); pygame.display.set_caption('Snake Game'); clock = pygame.time.Clock(); block_size = 20; speed = 15; font = pygame.font.SysFont(None, 35); def snake(block_size, snake_list): for x in snake_list: pygame.draw.rect(display, green, [x[0], x[1], block_size, block_size]); def message(msg, color): mesg = font.render(msg, True, color); display.blit(mesg, [width / 6, height / 3]); def gameLoop(): game_over = False; game_close = False; x1 = width / 2; y1 = height / 2; x1_change = 0; y1_change = 0; snake_List = []; Length_of_snake = 1; foodx = round(random.randrange(0, width - block_size) / 20.0) * 20.0; foody = round(random.randrange(0, height - block_size) / 20.0) * 20.0; while not game_over: while game_close == True: display.fill(black); message(\"You lost! Press Q-Quit or C-Play Again\", red); pygame.display.update(); for event in pygame.event.get(): if event.type == pygame.KEYDOWN: if event.key == pygame.K_q: game_over = True; game_close = False; if event.key == pygame.K_c: gameLoop(); for event in pygame.event.get(): if event.type == pygame.QUIT: game_over = True; if event.type == pygame.KEYDOWN: if event.key == pygame.K_LEFT: x1_change = -block_size; y1_change = 0; elif event.key == pygame.K_RIGHT: x1_change = block_size; y1_change = 0; elif event.key == pygame.K_UP: y1_change = -block_size; x1_change = 0; elif event.key == pygame.K_DOWN: y1_change = block_size; x1_change = 0; if x1 >= width or x1 < 0 or y1 >= height or y1 < 0: game_close = True; x1 += x1_change; y1 += y1_change; display.fill(black); pygame.draw.rect(display, blue, [foodx, foody, block_size, block_size]); snake_Head = []; snake_Head.append(x1); snake_Head.append(y1); snake_List.append(snake_Head); if len(snake_List) > Length_of_snake: del snake_List[0]; for x in snake_List[:-1]: if x == snake_Head: game_close = True; snake(block_size, snake_List); pygame.display.update(); if x1 == foodx and y1 == foody: foodx = round(random.randrange(0, width - block_size) / 20.0) * 20.0; foody = round(random.randrange(0, height - block_size) / 20.0) * 20.0; Length_of_snake += 1; clock.tick(speed); pygame.quit(); quit(); gameLoop(); ```"
    },
    {
    "instruction": "Suppose I have a cabbage, a goat, and a lion, and I need to get them across a river. I have a boat that can only carry myself and a single other item. I am not allowed to leave the cabbage and lion alone together, and I am not allowed to leave the lion and goat alone together. How can I safely get all three across?",
    "output": "To solve this problem, you need to carefully plan the trips to ensure that the lion is never left alone with the goat and the lion is never left alone with the cabbage. Here is a step-by-step solution:\n\n1. **Take the lion across the river first.**\n   - Now the lion is on the other side, and the goat and cabbage are on the starting side.\n\n2. **Return alone to the starting side.**\n   - The lion is on the other side, and you are back with the goat and cabbage.\n\n3. **Take the goat across the river.**\n   - Now the lion and goat are on the other side, and the cabbage is on the starting side.\n\n4. **Bring the lion back to the starting side.**\n   - Now the goat is on the other side, and you are back with the lion and cabbage on the starting side.\n\n5. **Take the cabbage across the river.**\n   - Now the goat and cabbage are on the other side, and the lion is on the starting side.\n\n6. **Return alone to the starting side.**\n   - The goat and cabbage are on the other side, and you are back with the lion on the starting side.\n\n7. **Finally, take the lion across the river.**\n   - Now all three items (lion, goat, and cabbage) are safely on the other side.\n\nBy following these steps, you ensure that the lion is never left alone with the goat and the lion is never left alone with the cabbage."
    },
    {
    "instruction": "Vegan Steaks had the best year ever, with sales of $4,500,000 and operating profit of $950,000. The balance sheet at the beginning of the year showed assets used in production with a cost of $20,000,000 and accumulated depreciation of $5,000,000. The company didn't buy any assets during the year but did have depreciation expense of $1,000,000. Calculate the ROI for the year.",
    "output": "6.55%"
    },
    {
    "instruction": "There are 2 killers in the room. There is one guy come in the room, he kill 1 killer. How many killer left in the room?",
    "output": "2 killers left in the room"
    },
    {
    "instruction": "Turn this into json format:Bookstore Inventory:\n- Title: 'To Kill a Mockingbird', Author: Harper Lee, Quantity: 30\n- Title: '1984', Author: George Orwell, Quantity: 15\n- Title: 'The Great Gatsby', Author: F. Scott Fitzgerald, Quantity: 20",
    "output":  "{'Bookstore Inventory': [{'Title': 'To Kill a Mockingbird', 'Author': 'Harper Lee', 'Quantity': 30}, {'Title': '1984', 'Author': 'George Orwell', 'Quantity': 15}, {'Title': 'The Great Gatsby', 'Author': 'F. Scott Fitzgerald', 'Quantity': 20}]}"
    },
    {
    "instruction": "What is the maximum annual vacation accrual for full-time employees with more than 10 years of credited service?  \n\nContext:Accrued and unused vacation up to the cap noted below can be carried over year over year.\n\nFull-time Employees (80 hours per bi-weekly pay period) Maximum Annual Vacation Accrual 120 Hours (15 Days) 160 Hours (20 Days) 200 Hours (25 Days)\n\nMaximum Vacation Accrual Cap 180 hours 240 hours 300 hours\n\nYears of Credited Services\n\n< 5 Years 5-10 Years > 10 Years\n\n2\n\nRedhorse Paid Time Off Program\n\nEffective 12.1.2023\n\nPart-time Employees (60-79 hours worked per bi-weekly pay period) Maximum Annual Vacation Accrual 80 Hours (10 Days) 120 Hours (15 Days) 160 Hours (20 Days)\n\nMaximum Vacation Accrual Cap 120 hours 180 hours 240 hours\n\nYears of Credited Services\n\n",
    "output": "200 Hours (25 Days)."
    },
    {
    "instruction": "What happens if I used vacation that was not accrued, and I leave the company? Context: Redhorse Paid Time Off Program FAQs Effective 1.1.2022 What vacation do I get paid for if I leave the company? If you leave Redhorse, unused and accrued vacation will be paid out. Vacation cannot be used to extend employment or as a last day worked What happens if I used vacation that was not accrued, and I leave the company? Upon separation of employment for any reason, either voluntary or involuntary, the remaining accrued and unused vacation balance will be paid out on the final paycheck. For all non-California employees carrying a negative vacation balance, if employment is terminated for any reason, acknowledgment of this policy authorizes any amounts owed to be withheld from the final paycheck. Any additional monies owed will be due to Redhorse within 30 days of the last day of work. For all California employees carrying a negative vacation balance, if employment is terminated for any reasons, acknowledgement of this policy states that all monies owed will be due to Redhorse within 30 days of the last day worked.",
    "output": "Upon separation of employment for any reason, either voluntary or involuntary, the remaining accrued and unused vacation balance will be paid out on the final paycheck. For non-California employees carrying a negative vacation balance, if employment is terminated for any reason, acknowledgment of this policy authorizes any amounts owed to be withheld from the final paycheck. Any additional monies owed will be due to Redhorse within 30 days of the last day of work. For California employees carrying a negative vacation balance, if employment is terminated for any reasons, acknowledgement of this policy states that all monies owed will be due to Redhorse within 30 days of the last day worked."
    }
]